{
  "collection": {
    "_": {
      "postman_id": "0a47c555-50bc-4e56-bc1f-a0eddc96236a",
      "exporter_id": "18526632"
    },
    "item": [
      {
        "id": "b495f122-1318-4966-90a4-9ffb45ae66d4",
        "name": "Authentication",
        "item": [
          {
            "id": "11b6e36d-56b5-4a77-a137-0d203a631f16",
            "name": "Auth",
            "request": {
              "url": {
                "path": [
                  "api",
                  "auth"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n    \"email\": \"gianna@hightable.test\",\n    \"password\": \"thedantonio1\"\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "0ae3937d-8cfd-44b5-99ed-401c731cd826",
                  "type": "text/javascript",
                  "exec": [
                    "var jsonData = pm.response.json();",
                    "",
                    "pm.environment.set(\"access_token\", jsonData.data.session.token);",
                    "",
                    "pm.test(\"Validations | Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"Validations | Status is OK\", function () {",
                    "    pm.response.to.have.status(\"OK\");",
                    "});",
                    "",
                    "pm.test(\"Validations | isLoggedIn\", function () {",
                    "    pm.expect(jsonData.data.session.loggedIn).to.eql(true);",
                    "    pm.expect(jsonData.data.session.loggedIn).not.eql(false);",
                    "});",
                    "",
                    "pm.test(\"Validations | Credentials validated\", function () {",
                    "    pm.expect(jsonData.ok).to.eql(true);",
                    "    pm.expect(jsonData.ok).not.eql(null);",
                    "});",
                    "",
                    "pm.test(\"Validations | userID is present\", function () {",
                    "    pm.expect(jsonData.data.session.userId).to.eql(3);",
                    "    pm.expect(jsonData.data.session.userId).to.not.be.string;",
                    "});",
                    "",
                    "pm.test(\"Validations | Permissions not null\", function () {",
                    "   pm.expect(jsonData.data.permissions).not.eql(null);",
                    "",
                    "});",
                    "",
                    "pm.test(\"Validations | user authenticated\", function () {",
                    "   pm.expect(jsonData.data.auth).to.eql(true);",
                    "});",
                    "",
                    "pm.test(\"Validations | key is present\", function () {",
                    "   pm.expect(jsonData.data.session.key).not.eql(null);",
                    "});",
                    "",
                    "pm.test('Validation| Permissions is an Array', () => {",
                    "    pm.expect(jsonData.data.permissions).to.be.an('array').but.not.an('object')",
                    "});",
                    "",
                    "",
                    ""
                  ],
                  "_lastExecutionId": "1e01f289-e5b6-4ceb-badf-6b5b3f098cd8"
                }
              }
            ]
          },
          {
            "id": "00534f99-9c6b-4f0c-a1ee-849d3f8e204b",
            "name": "Auth - Incorrect password",
            "request": {
              "url": {
                "path": [
                  "api",
                  "auth"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n    \"email\": \"gianna@hightable.test\",\n    \"password\": \"1234567\"\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "1afb0f95-05ff-4f88-9cba-592a850f51ec",
                  "type": "text/javascript",
                  "exec": [
                    "var jsonData = pm.response.json();",
                    "",
                    "",
                    "pm.test(\"Validations | Status code is 400\", function () {",
                    "    pm.response.to.have.status(400);",
                    "});",
                    "",
                    "pm.test(\"Validations | Unable to validate login credentials\", function () {",
                    "    pm.expect(jsonData.ok).to.eql(false);",
                    "    pm.expect(jsonData.ok).not.eql(null);",
                    "});",
                    "",
                    "pm.test(\"Validations | isLoggedIn not found\", function () {",
                    "    pm.expect(jsonData.data).to.not.have.property('isLoggedIn');",
                    "});",
                    "",
                    "pm.test(\"Validations | userID is not available\", function () {",
                    "    pm.expect(jsonData.data).to.not.have.property('userID');",
                    "});",
                    "",
                    "pm.test(\"Validations | Permissions are not granted\", function () {",
                    "    pm.expect(jsonData.data).to.not.have.property('Permissions');",
                    "});",
                    "",
                    "pm.test(\"Validations | Invalid credentials\", function () {",
                    "    pm.expect(jsonData.data.message).to.include('Invalid login credentials');",
                    "});",
                    ""
                  ],
                  "_lastExecutionId": "22bb8451-94ff-4225-9a0c-5a9d6c2a2b9d"
                }
              }
            ]
          },
          {
            "id": "3d9f8e04-081e-4784-b56f-657d5c5d1566",
            "name": "Auth - Incorrect email",
            "request": {
              "url": {
                "path": [
                  "api",
                  "auth"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n    \"email\": \"abc@google.test\",\n    \"password\": \"thedantonio1\"\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e2f86711-56fa-42c2-9afb-76925cad74c5",
                  "type": "text/javascript",
                  "exec": [
                    "var jsonData = pm.response.json();",
                    "",
                    "",
                    "pm.test(\"Validations | Status code is 400\", function () {",
                    "    pm.response.to.have.status(400);",
                    "});",
                    "",
                    "pm.test(\"Validations | Unable to validate login credentials\", function () {",
                    "    pm.expect(jsonData.ok).to.eql(false);",
                    "    pm.expect(jsonData.ok).not.eql(null);",
                    "});",
                    "",
                    "pm.test(\"Validations | isLoggedIn not found\", function () {",
                    "    pm.expect(jsonData.data).to.not.have.property('isLoggedIn');",
                    "});",
                    "",
                    "pm.test(\"Validations | userID is not available\", function () {",
                    "    pm.expect(jsonData.data).to.not.have.property('userID');",
                    "});",
                    "",
                    "pm.test(\"Validations | Permissions are not granted\", function () {",
                    "    pm.expect(jsonData.data).to.not.have.property('Permissions');",
                    "});",
                    "",
                    "pm.test(\"Validations | Invalid credentials\", function () {",
                    "    pm.expect(jsonData.data.message).to.include('Invalid login credentials');",
                    "});"
                  ],
                  "_lastExecutionId": "b7d3a38c-150e-4c02-9f5f-00ee9656766f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ee7b7ba4-79ce-44b9-b22f-4cf7e304b04d",
        "name": "Search Clinics",
        "item": [
          {
            "id": "e88523c5-1bca-403e-949e-c5cd47cba8ea",
            "name": "Search Clinics - Veterinary",
            "request": {
              "url": {
                "path": [
                  "api",
                  "clinics"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [
                  {
                    "key": "term",
                    "value": "{{searchTerm}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{access_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "960864f3-f4be-421e-a157-90ef1a51ae4e",
                "name": "Get Clinics",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "api",
                      "clinics"
                    ],
                    "host": [
                      "qa-challenge-api",
                      "scratchpay",
                      "com"
                    ],
                    "query": [
                      {
                        "key": "term",
                        "value": "veterinary"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Date",
                    "value": "Tue, 14 Mar 2023 14:26:59 GMT"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "key": "Transfer-Encoding",
                    "value": "chunked"
                  },
                  {
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "key": "strict-transport-security",
                    "value": "max-age=15724800; includeSubDomains"
                  },
                  {
                    "key": "access-control-allow-headers",
                    "value": "Content-Type, Authorization"
                  },
                  {
                    "key": "access-control-allow-methods",
                    "value": "HEAD, GET, POST, PUT, PATCH, DELETE, OPTIONS, TRACE"
                  },
                  {
                    "key": "access-control-allow-origin",
                    "value": "*"
                  },
                  {
                    "key": "x-powered-by",
                    "value": "dashboard-core-redux"
                  },
                  {
                    "key": "CF-Cache-Status",
                    "value": "DYNAMIC"
                  },
                  {
                    "key": "Server",
                    "value": "cloudflare"
                  },
                  {
                    "key": "CF-RAY",
                    "value": "7a7d31deea7871b1-LHR"
                  },
                  {
                    "key": "Content-Encoding",
                    "value": "gzip"
                  }
                ],
                "body": "{\n    \"ok\": true,\n    \"data\": [\n        {\n            \"id\": 2,\n            \"displayName\": \"Continental Veterinary Clinic, Los Angeles, CA\"\n        },\n        {\n            \"id\": 7,\n            \"displayName\": \"Third Transfer Veterinary Clinic, Los Angeles, CA\"\n        }\n    ]\n}",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "1a116c5d-6d31-4bd2-a8dc-01ea5d38c292",
                  "type": "text/javascript",
                  "exec": [
                    "var jsonData = pm.response.json();",
                    "",
                    "pm.test(\"Validations | Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"Validations | Credentials validated\", function () {",
                    "    pm.expect(jsonData.ok).to.eql(true);",
                    "    pm.expect(jsonData.ok).not.eql(null);",
                    "});",
                    "",
                    "pm.test(\"Validations | id is present\", function () {",
                    "    let Data = pm.response.json().data",
                    "    if(data.length>0){",
                    "    _.each(Data, (arrItem) => {",
                    "        pm.expect(arrItem.id).not.null",
                    "        pm.expect(arrItem.id).not.be.string",
                    "    })",
                    "    }",
                    "})",
                    "",
                    "pm.test(\"Validations | displayName is present\", function () {",
                    "    let Data = pm.response.json().data",
                    "    if(data.length>0){",
                    "    _.each(Data, (arrItem) => {",
                    "        pm.expect(arrItem.displayName).not.null",
                    "        pm.expect(arrItem.displayName).to.be.string",
                    "    })",
                    "    }",
                    "})",
                    "",
                    "pm.test(\"Validations | Body Contains Search Term\", function () {",
                    "",
                    "    response = jsonData.data",
                    "    if (response.length > 0) {",
                    "        response.forEach((x) => {",
                    "            pm.expect(x.displayName).to.include(pm.environment.get(\"searchTerm\"));",
                    "        })",
                    "    }",
                    "});",
                    "",
                    "",
                    ""
                  ],
                  "_lastExecutionId": "b67ac1da-459c-43cb-ba67-4eacc6f6ea2e"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "99c36d1c-a39d-48ad-a7d8-be6d0ea0a7bd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.environment.set(\"searchTerm\", \"Veterinary\");"
                  ],
                  "_lastExecutionId": "07dffbf5-5b5e-44e9-a933-324902e9d958"
                }
              }
            ]
          },
          {
            "id": "fb68f8fc-b7ed-48ef-90e4-569057e48b6d",
            "name": "Search Clinics - Veterinary without auth",
            "request": {
              "url": {
                "path": [
                  "api",
                  "clinics"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [
                  {
                    "key": "term",
                    "value": "{{searchTerm}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "43d47bac-0acb-4b77-bc0b-828c3c91528e",
                "name": "Get Clinics",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "api",
                      "clinics"
                    ],
                    "host": [
                      "qa-challenge-api",
                      "scratchpay",
                      "com"
                    ],
                    "query": [
                      {
                        "key": "term",
                        "value": "veterinary"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Date",
                    "value": "Tue, 14 Mar 2023 14:26:59 GMT"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "key": "Transfer-Encoding",
                    "value": "chunked"
                  },
                  {
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "key": "strict-transport-security",
                    "value": "max-age=15724800; includeSubDomains"
                  },
                  {
                    "key": "access-control-allow-headers",
                    "value": "Content-Type, Authorization"
                  },
                  {
                    "key": "access-control-allow-methods",
                    "value": "HEAD, GET, POST, PUT, PATCH, DELETE, OPTIONS, TRACE"
                  },
                  {
                    "key": "access-control-allow-origin",
                    "value": "*"
                  },
                  {
                    "key": "x-powered-by",
                    "value": "dashboard-core-redux"
                  },
                  {
                    "key": "CF-Cache-Status",
                    "value": "DYNAMIC"
                  },
                  {
                    "key": "Server",
                    "value": "cloudflare"
                  },
                  {
                    "key": "CF-RAY",
                    "value": "7a7d31deea7871b1-LHR"
                  },
                  {
                    "key": "Content-Encoding",
                    "value": "gzip"
                  }
                ],
                "body": "{\n    \"ok\": true,\n    \"data\": [\n        {\n            \"id\": 2,\n            \"displayName\": \"Continental Veterinary Clinic, Los Angeles, CA\"\n        },\n        {\n            \"id\": 7,\n            \"displayName\": \"Third Transfer Veterinary Clinic, Los Angeles, CA\"\n        }\n    ]\n}",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "28ef571d-1b29-4f65-a693-c1db6dbe375c",
                  "type": "text/javascript",
                  "exec": [
                    "var jsonData = pm.response.json();",
                    "",
                    "pm.test(\"Validations | Status code is 401\", function () {",
                    "    pm.response.to.have.status(401);",
                    "});",
                    "",
                    "pm.test(\"Status is Unauthorized\", function () {",
                    "    pm.response.to.have.status(\"Unauthorized\");",
                    "});",
                    "",
                    "pm.test(\"Validations | user is Unauthorized\", function () {",
                    "    pm.expect(jsonData.ok).to.eql(false);",
                    "    pm.expect(jsonData.ok).not.eql(null);",
                    "});",
                    "",
                    "pm.test(\"Validations | Body does not contain Search Term\", function () {",
                    "",
                    "    response = jsonData.data",
                    "    if (response.length > 0) {",
                    "        response.forEach((x) => {",
                    "            pm.expect(x.displayName).to.not.include(pm.environment.get(\"searchTerm\"));",
                    "        })",
                    "    }",
                    "});",
                    "",
                    "pm.test(\"Validations | Unauthorized user\", function () {",
                    "    pm.expect(jsonData.data.message).to.include('You need to be authorized for this action.');",
                    "});",
                    ""
                  ],
                  "_lastExecutionId": "898bf408-927e-4eac-81f8-d6c0a3f09cb0"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "d9d80780-0e8d-45c9-b758-c78c8aabcb1a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.environment.set(\"searchTerm\", \"Veterinary\");"
                  ],
                  "_lastExecutionId": "9cc466e3-cf04-4a0b-82ad-c8409eefb207"
                }
              }
            ]
          },
          {
            "id": "5f0235f9-3729-4a53-8181-ced3c3c6c0a1",
            "name": "Search Clinics - Dental",
            "request": {
              "url": {
                "path": [
                  "api",
                  "clinics"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [
                  {
                    "key": "term",
                    "value": "{{searchTerm}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{access_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "827c630f-1baf-45a7-81ab-e86a6c09c44f",
                "name": "Get Clinics",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "api",
                      "clinics"
                    ],
                    "host": [
                      "qa-challenge-api",
                      "scratchpay",
                      "com"
                    ],
                    "query": [
                      {
                        "key": "term",
                        "value": "veterinary"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Date",
                    "value": "Tue, 14 Mar 2023 14:26:59 GMT"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "key": "Transfer-Encoding",
                    "value": "chunked"
                  },
                  {
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "key": "strict-transport-security",
                    "value": "max-age=15724800; includeSubDomains"
                  },
                  {
                    "key": "access-control-allow-headers",
                    "value": "Content-Type, Authorization"
                  },
                  {
                    "key": "access-control-allow-methods",
                    "value": "HEAD, GET, POST, PUT, PATCH, DELETE, OPTIONS, TRACE"
                  },
                  {
                    "key": "access-control-allow-origin",
                    "value": "*"
                  },
                  {
                    "key": "x-powered-by",
                    "value": "dashboard-core-redux"
                  },
                  {
                    "key": "CF-Cache-Status",
                    "value": "DYNAMIC"
                  },
                  {
                    "key": "Server",
                    "value": "cloudflare"
                  },
                  {
                    "key": "CF-RAY",
                    "value": "7a7d31deea7871b1-LHR"
                  },
                  {
                    "key": "Content-Encoding",
                    "value": "gzip"
                  }
                ],
                "body": "{\n    \"ok\": true,\n    \"data\": [\n        {\n            \"id\": 2,\n            \"displayName\": \"Continental Veterinary Clinic, Los Angeles, CA\"\n        },\n        {\n            \"id\": 7,\n            \"displayName\": \"Third Transfer Veterinary Clinic, Los Angeles, CA\"\n        }\n    ]\n}",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b369fe4a-a160-40d2-af05-65930886f082",
                  "type": "text/javascript",
                  "exec": [
                    "var jsonData = pm.response.json();",
                    "",
                    "pm.test(\"Validations | Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"Validations | Body Contains Search Term\", function () {",
                    "",
                    "    response = jsonData.data",
                    "    if (response.length > 0) {",
                    "        response.forEach((x) => {",
                    "            pm.expect(x.displayName).to.include(pm.environment.get(\"searchTerm\"));",
                    "        })",
                    "    }",
                    "});",
                    "",
                    "pm.test(\"Validations | Credentials validated\", function () {",
                    "    pm.expect(jsonData.ok).to.eql(true);",
                    "    pm.expect(jsonData.ok).not.eql(null);",
                    "});",
                    "",
                    "pm.test(\"Validations | id is present\", function () {",
                    "    let Data = pm.response.json().data",
                    "    if(data.length>0){",
                    "    _.each(Data, (arrItem) => {",
                    "        pm.expect(arrItem.id).not.null",
                    "        pm.expect(arrItem.id).not.be.string",
                    "    })",
                    "    }",
                    "})",
                    "",
                    "pm.test(\"Validations | displayName is present\", function () {",
                    "    let Data = pm.response.json().data",
                    "    if(data.length>0){",
                    "    _.each(Data, (arrItem) => {",
                    "        pm.expect(arrItem.displayName).not.null",
                    "        pm.expect(arrItem.displayName).to.be.string",
                    "    })",
                    "    }",
                    "})",
                    ""
                  ],
                  "_lastExecutionId": "e9fc4cbd-1389-4e2a-9231-d0da84983f7f"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "cb6bea47-4a7d-475f-be91-fb13edc9df96",
                  "type": "text/javascript",
                  "exec": [
                    "pm.environment.set(\"searchTerm\", \"Dental\");"
                  ],
                  "_lastExecutionId": "24ee98df-3a58-46b2-a313-e500a0e271bd"
                }
              }
            ]
          },
          {
            "id": "3f760bcb-ea5f-4455-8039-c6635cec2eb5",
            "name": "Search Clinics - Eye",
            "request": {
              "url": {
                "path": [
                  "api",
                  "clinics"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [
                  {
                    "key": "term",
                    "value": "Eye"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{access_token}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "1e2d80e9-1e2a-4e22-a0aa-011db9aaea75",
                "name": "Get Clinics",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "api",
                      "clinics"
                    ],
                    "host": [
                      "qa-challenge-api",
                      "scratchpay",
                      "com"
                    ],
                    "query": [
                      {
                        "key": "term",
                        "value": "veterinary"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Date",
                    "value": "Tue, 14 Mar 2023 14:26:59 GMT"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "key": "Transfer-Encoding",
                    "value": "chunked"
                  },
                  {
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "key": "strict-transport-security",
                    "value": "max-age=15724800; includeSubDomains"
                  },
                  {
                    "key": "access-control-allow-headers",
                    "value": "Content-Type, Authorization"
                  },
                  {
                    "key": "access-control-allow-methods",
                    "value": "HEAD, GET, POST, PUT, PATCH, DELETE, OPTIONS, TRACE"
                  },
                  {
                    "key": "access-control-allow-origin",
                    "value": "*"
                  },
                  {
                    "key": "x-powered-by",
                    "value": "dashboard-core-redux"
                  },
                  {
                    "key": "CF-Cache-Status",
                    "value": "DYNAMIC"
                  },
                  {
                    "key": "Server",
                    "value": "cloudflare"
                  },
                  {
                    "key": "CF-RAY",
                    "value": "7a7d31deea7871b1-LHR"
                  },
                  {
                    "key": "Content-Encoding",
                    "value": "gzip"
                  }
                ],
                "body": "{\n    \"ok\": true,\n    \"data\": [\n        {\n            \"id\": 2,\n            \"displayName\": \"Continental Veterinary Clinic, Los Angeles, CA\"\n        },\n        {\n            \"id\": 7,\n            \"displayName\": \"Third Transfer Veterinary Clinic, Los Angeles, CA\"\n        }\n    ]\n}",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c3ec2de2-508d-4048-a201-5cc005982090",
                  "type": "text/javascript",
                  "exec": [
                    "var jsonData = pm.response.json();",
                    "",
                    "pm.test(\"Validations | Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"Validations | Body Contains Search Term\", function () {",
                    "",
                    "    response = jsonData.data",
                    "    if (response.length > 0) {",
                    "        response.forEach((x) => {",
                    "            pm.expect(x.displayName).to.include(pm.environment.get(\"searchTerm\"));",
                    "        })",
                    "    }",
                    "});",
                    "",
                    "pm.test(\"Validations | Credentials validated\", function () {",
                    "    pm.expect(jsonData.ok).to.eql(true);",
                    "    pm.expect(jsonData.ok).not.eql(null);",
                    "});",
                    "",
                    "pm.test(\"Validations | id is present\", function () {",
                    "    let Data = pm.response.json().data",
                    "    if(data.length>0){",
                    "    _.each(Data, (arrItem) => {",
                    "        pm.expect(arrItem.id).not.null",
                    "        pm.expect(arrItem.id).not.be.string",
                    "    })",
                    "    }",
                    "})",
                    "",
                    "pm.test(\"Validations | displayName is present\", function () {",
                    "    let Data = pm.response.json().data",
                    "    if(data.length>0){",
                    "    _.each(Data, (arrItem) => {",
                    "        pm.expect(arrItem.displayName).not.null",
                    "        pm.expect(arrItem.displayName).to.be.string",
                    "    })",
                    "    }",
                    "})",
                    "",
                    ""
                  ],
                  "_lastExecutionId": "55e72c02-7360-40a6-8dbc-37559e879600"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "3cb4c4a5-df1b-478b-8163-f886e05f9399",
                  "type": "text/javascript",
                  "exec": [
                    "pm.environment.set(\"searchTerm\", \"Eye\");"
                  ],
                  "_lastExecutionId": "52cbd728-5473-4d25-aedd-429146597051"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "03b48a04-31b6-4562-a18b-a408f9802cda",
        "name": "Users",
        "item": [
          {
            "id": "e8924d21-7c65-4d30-af1b-96504ee8b351",
            "name": "Get Emails",
            "request": {
              "url": {
                "path": [
                  "api",
                  "clinics",
                  "2",
                  "emails"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiZW1haWwiOiJnaWFubmFAaGlnaHRhYmxlLnRlc3QiLCJmaXJzdE5hbWUiOiJHaWFubmEiLCJsYXN0TmFtZSI6IkQnQW50b25pbyIsInN0YXR1cyI6ImFjdGl2ZSIsInJvbGUiOiJjbGluaWMiLCJpYXQiOjE2Nzg4MDM4MjAsImV4cCI6MTY3OTQwODYyMH0.hfjvQ5TBLbyVbvmELxP37allLOfdiuexj8Uwat_GLG0",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "2c17c5ea-2358-4e66-a02c-c0ce063b716d",
                  "type": "text/javascript",
                  "exec": [
                    "var jsonData = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Validations | Status code is 400\", function () {\r",
                    "    pm.response.to.have.status(400);\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Validations | Status = Bad Request\", function () {\r",
                    "    pm.response.to.have.status(\"Bad Request\");\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Validations | credentials not valid for this action\", function () {\r",
                    "    pm.expect(jsonData.ok).to.eql(false);\r",
                    "    pm.expect(jsonData.ok).not.eql(null);\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Validations | User not permitted\", function () {\r",
                    "    pm.expect(pm.response.text()).to.include(\"User does not have permissions\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "65ec38ef-1ab8-411c-93ff-d54fb57a5dd6"
                }
              }
            ]
          }
        ],
        "event": []
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "0a47c555-50bc-4e56-bc1f-a0eddc96236a",
      "name": "Scratch Pay",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2023-03-15T10:38:42.286Z",
      "postman_exported_using": "Postman/10.11.2"
    },
    "id": "c2e4c650-a925-4ebf-9079-9f42f3dbe761",
    "name": "Test environment",
    "values": [
      {
        "type": "any",
        "value": "c646a584b639aee3b311ba882ea46c8587471c54b0e8db965ff5871ebc41f646",
        "key": "bearerToken"
      },
      {
        "type": "any",
        "value": "",
        "key": "userID"
      },
      {
        "type": "any",
        "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiZW1haWwiOiJnaWFubmFAaGlnaHRhYmxlLnRlc3QiLCJmaXJzdE5hbWUiOiJHaWFubmEiLCJsYXN0TmFtZSI6IkQnQW50b25pbyIsInN0YXR1cyI6ImFjdGl2ZSIsInJvbGUiOiJjbGluaWMiLCJpYXQiOjE2Nzg4Nzk5NDEsImV4cCI6MTY3OTQ4NDc0MX0.qMhlrvOn_Tdz6hcJFJKGwbS94PUuLPHwpAWSh6TNFd0",
        "key": "access_token"
      },
      {
        "type": "any",
        "value": "Eye",
        "key": "searchTerm"
      },
      {
        "type": "any",
        "value": "https://qa-challenge-api.scratchpay.com",
        "key": "base_url"
      }
    ]
  },
  "globals": {
    "id": "c23b7503-6b93-4e99-933f-68d9776aba96",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 8,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 12,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 8,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 8,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 8,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 45,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 8,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 4,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 456.875,
      "responseMin": 287,
      "responseMax": 1277,
      "responseSd": 313.4303899991192,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1678879939349,
      "completed": 1678879943835
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 8,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ccb3b7af-e49b-4705-bba1-c0fb34d868da",
          "httpRequestId": "16801384-0775-4f94-8e93-ce5b3b971c91"
        },
        "item": {
          "id": "11b6e36d-56b5-4a77-a137-0d203a631f16",
          "name": "Auth",
          "request": {
            "url": {
              "path": [
                "api",
                "auth"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"gianna@hightable.test\",\n    \"password\": \"thedantonio1\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0ae3937d-8cfd-44b5-99ed-401c731cd826",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"access_token\", jsonData.data.session.token);",
                  "",
                  "pm.test(\"Validations | Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Validations | Status is OK\", function () {",
                  "    pm.response.to.have.status(\"OK\");",
                  "});",
                  "",
                  "pm.test(\"Validations | isLoggedIn\", function () {",
                  "    pm.expect(jsonData.data.session.loggedIn).to.eql(true);",
                  "    pm.expect(jsonData.data.session.loggedIn).not.eql(false);",
                  "});",
                  "",
                  "pm.test(\"Validations | Credentials validated\", function () {",
                  "    pm.expect(jsonData.ok).to.eql(true);",
                  "    pm.expect(jsonData.ok).not.eql(null);",
                  "});",
                  "",
                  "pm.test(\"Validations | userID is present\", function () {",
                  "    pm.expect(jsonData.data.session.userId).to.eql(3);",
                  "    pm.expect(jsonData.data.session.userId).to.not.be.string;",
                  "});",
                  "",
                  "pm.test(\"Validations | Permissions not null\", function () {",
                  "   pm.expect(jsonData.data.permissions).not.eql(null);",
                  "",
                  "});",
                  "",
                  "pm.test(\"Validations | user authenticated\", function () {",
                  "   pm.expect(jsonData.data.auth).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Validations | key is present\", function () {",
                  "   pm.expect(jsonData.data.session.key).not.eql(null);",
                  "});",
                  "",
                  "pm.test('Validation| Permissions is an Array', () => {",
                  "    pm.expect(jsonData.data.permissions).to.be.an('array').but.not.an('object')",
                  "});",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "1e01f289-e5b6-4ceb-badf-6b5b3f098cd8"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "auth"
            ],
            "host": [
              "qa-challenge-api",
              "scratchpay",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6b08d909-fb72-4ec1-8019-aa456a5645cb",
              "system": true
            },
            {
              "key": "Host",
              "value": "qa-challenge-api.scratchpay.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "72",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"gianna@hightable.test\",\n    \"password\": \"thedantonio1\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "7be89a51-34d0-4d69-a389-d486ee588810",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 15 Mar 2023 11:32:21 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "access-control-allow-headers",
              "value": "Content-Type, Authorization"
            },
            {
              "key": "access-control-allow-methods",
              "value": "HEAD, GET, POST, PUT, PATCH, DELETE, OPTIONS, TRACE"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-powered-by",
              "value": "dashboard-core-redux"
            },
            {
              "key": "set-cookie",
              "value": "sessionID=4ab1b89ff402b4f11d14891f926de2fc5a7e650f;path=/;expires=Wed, 15 Mar 2023 12:32:21 GMT;"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "7a846f6efa48dcc7-LHR"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              111,
              107,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              32,
              32,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              115,
              101,
              115,
              115,
              105,
              111,
              110,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              108,
              111,
              103,
              103,
              101,
              100,
              73,
              110,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              108,
              111,
              103,
              103,
              101,
              100,
              73,
              110,
              65,
              116,
              34,
              58,
              32,
              49,
              54,
              55,
              56,
              56,
              55,
              57,
              57,
              52,
              49,
              50,
              55,
              54,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              101,
              120,
              112,
              105,
              114,
              101,
              115,
              73,
              110,
              34,
              58,
              32,
              54,
              48,
              52,
              56,
              48,
              48,
              48,
              48,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              73,
              100,
              34,
              58,
              32,
              51,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              32,
              34,
              99,
              108,
              105,
              110,
              105,
              99,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              107,
              101,
              121,
              34,
              58,
              32,
              34,
              99,
              108,
              102,
              57,
              108,
              114,
              112,
              103,
              99,
              48,
              49,
              97,
              122,
              48,
              112,
              114,
              107,
              116,
              105,
              114,
              120,
              117,
              113,
              115,
              50,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              32,
              34,
              101,
              121,
              74,
              104,
              98,
              71,
              99,
              105,
              79,
              105,
              74,
              73,
              85,
              122,
              73,
              49,
              78,
              105,
              73,
              115,
              73,
              110,
              82,
              53,
              99,
              67,
              73,
              54,
              73,
              107,
              112,
              88,
              86,
              67,
              74,
              57,
              46,
              101,
              121,
              74,
              112,
              90,
              67,
              73,
              54,
              77,
              121,
              119,
              105,
              90,
              87,
              49,
              104,
              97,
              87,
              119,
              105,
              79,
              105,
              74,
              110,
              97,
              87,
              70,
              117,
              98,
              109,
              70,
              65,
              97,
              71,
              108,
              110,
              97,
              72,
              82,
              104,
              89,
              109,
              120,
              108,
              76,
              110,
              82,
              108,
              99,
              51,
              81,
              105,
              76,
              67,
              74,
              109,
              97,
              88,
              74,
              122,
              100,
              69,
              53,
              104,
              98,
              87,
              85,
              105,
              79,
              105,
              74,
              72,
              97,
              87,
              70,
              117,
              98,
              109,
              69,
              105,
              76,
              67,
              74,
              115,
              89,
              88,
              78,
              48,
              84,
              109,
              70,
              116,
              90,
              83,
              73,
              54,
              73,
              107,
              81,
              110,
              81,
              87,
              53,
              48,
              98,
              50,
              53,
              112,
              98,
              121,
              73,
              115,
              73,
              110,
              78,
              48,
              89,
              88,
              82,
              49,
              99,
              121,
              73,
              54,
              73,
              109,
              70,
              106,
              100,
              71,
              108,
              50,
              90,
              83,
              73,
              115,
              73,
              110,
              74,
              118,
              98,
              71,
              85,
              105,
              79,
              105,
              74,
              106,
              98,
              71,
              108,
              117,
              97,
              87,
              77,
              105,
              76,
              67,
              74,
              112,
              89,
              88,
              81,
              105,
              79,
              106,
              69,
              50,
              78,
              122,
              103,
              52,
              78,
              122,
              107,
              53,
              78,
              68,
              69,
              115,
              73,
              109,
              86,
              52,
              99,
              67,
              73,
              54,
              77,
              84,
              89,
              51,
              79,
              84,
              81,
              52,
              78,
              68,
              99,
              48,
              77,
              88,
              48,
              46,
              113,
              77,
              104,
              108,
              114,
              118,
              79,
              110,
              95,
              84,
              100,
              122,
              54,
              104,
              99,
              74,
              70,
              74,
              75,
              71,
              119,
              98,
              83,
              57,
              52,
              80,
              85,
              117,
              76,
              80,
              72,
              119,
              112,
              65,
              87,
              83,
              104,
              54,
              84,
              78,
              70,
              100,
              48,
              34,
              10,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              117,
              116,
              104,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              99,
              114,
              101,
              97,
              116,
              101,
              45,
              117,
              115,
              101,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              114,
              101,
              97,
              100,
              45,
              121,
              111,
              117,
              114,
              45,
              111,
              119,
              110,
              45,
              117,
              115,
              101,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              114,
              101,
              97,
              100,
              45,
              121,
              111,
              117,
              114,
              45,
              99,
              108,
              105,
              110,
              105,
              99,
              45,
              117,
              115,
              101,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              117,
              112,
              100,
              97,
              116,
              101,
              45,
              121,
              111,
              117,
              114,
              45,
              99,
              108,
              105,
              110,
              105,
              99,
              45,
              108,
              111,
              97,
              110,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              108,
              105,
              110,
              107,
              45,
              117,
              115,
              101,
              114,
              45,
              116,
              111,
              45,
              99,
              108,
              105,
              110,
              105,
              99,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              117,
              112,
              100,
              97,
              116,
              101,
              45,
              121,
              111,
              117,
              114,
              115,
              101,
              108,
              102,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              100,
              101,
              108,
              101,
              116,
              101,
              45,
              117,
              115,
              101,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              114,
              101,
              97,
              100,
              45,
              121,
              111,
              117,
              114,
              45,
              111,
              119,
              110,
              45,
              117,
              115,
              101,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              114,
              101,
              97,
              100,
              45,
              111,
              116,
              104,
              101,
              114,
              45,
              117,
              115,
              101,
              114,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              114,
              101,
              97,
              100,
              45,
              121,
              111,
              117,
              114,
              45,
              99,
              108,
              105,
              110,
              105,
              99,
              45,
              117,
              115,
              101,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              114,
              101,
              97,
              100,
              45,
              111,
              116,
              104,
              101,
              114,
              45,
              99,
              108,
              105,
              110,
              105,
              99,
              115,
              45,
              117,
              115,
              101,
              114,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              117,
              112,
              100,
              97,
              116,
              101,
              45,
              121,
              111,
              117,
              114,
              115,
              101,
              108,
              102,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              117,
              112,
              100,
              97,
              116,
              101,
              45,
              111,
              116,
              104,
              101,
              114,
              45,
              117,
              115,
              101,
              114,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              117,
              112,
              100,
              97,
              116,
              101,
              45,
              121,
              111,
              117,
              114,
              45,
              99,
              108,
              105,
              110,
              105,
              99,
              115,
              45,
              117,
              115,
              101,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              117,
              112,
              100,
              97,
              116,
              101,
              45,
              97,
              108,
              108,
              45,
              99,
              108,
              105,
              110,
              105,
              99,
              115,
              45,
              117,
              115,
              101,
              114,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              100,
              101,
              108,
              101,
              116,
              101,
              45,
              117,
              115,
              101,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              100,
              101,
              108,
              101,
              116,
              101,
              45,
              111,
              116,
              104,
              101,
              114,
              45,
              117,
              115,
              101,
              114,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              100,
              101,
              108,
              101,
              116,
              101,
              45,
              121,
              111,
              117,
              114,
              45,
              99,
              108,
              105,
              110,
              105,
              99,
              115,
              45,
              117,
              115,
              101,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              100,
              101,
              108,
              101,
              116,
              101,
              45,
              111,
              116,
              104,
              101,
              114,
              45,
              99,
              108,
              105,
              110,
              105,
              99,
              115,
              45,
              117,
              115,
              101,
              114,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              114,
              101,
              97,
              100,
              45,
              121,
              111,
              117,
              114,
              45,
              98,
              97,
              108,
              97,
              110,
              99,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              114,
              101,
              97,
              100,
              45,
              111,
              116,
              104,
              101,
              114,
              115,
              45,
              98,
              97,
              108,
              97,
              110,
              99,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              117,
              112,
              100,
              97,
              116,
              101,
              45,
              98,
              97,
              108,
              97,
              110,
              99,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              116,
              114,
              97,
              110,
              115,
              102,
              101,
              114,
              45,
              98,
              97,
              108,
              97,
              110,
              99,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              99,
              108,
              111,
              115,
              101,
              45,
              98,
              97,
              108,
              97,
              110,
              99,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              99,
              104,
              101,
              99,
              107,
              45,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              45,
              117,
              115,
              101,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              117,
              112,
              100,
              97,
              116,
              101,
              45,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              114,
              101,
              109,
              111,
              118,
              101,
              45,
              98,
              108,
              97,
              99,
              107,
              108,
              105,
              115,
              116,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              97,
              100,
              100,
              45,
              118,
              101,
              108,
              111,
              99,
              105,
              116,
              121,
              45,
              99,
              111,
              117,
              110,
              116,
              101,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              114,
              101,
              115,
              101,
              116,
              45,
              111,
              110,
              101,
              45,
              118,
              101,
              108,
              111,
              99,
              105,
              116,
              121,
              45,
              99,
              111,
              117,
              110,
              116,
              101,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              110,
              45,
              114,
              101,
              115,
              101,
              116,
              45,
              109,
              117,
              108,
              116,
              105,
              112,
              108,
              101,
              45,
              118,
              101,
              108,
              111,
              99,
              105,
              116,
              121,
              45,
              99,
              111,
              117,
              110,
              116,
              101,
              114,
              115,
              34,
              10,
              32,
              32,
              32,
              32,
              93,
              10,
              32,
              32,
              125,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1277,
          "responseSize": 1587
        },
        "id": "11b6e36d-56b5-4a77-a137-0d203a631f16",
        "assertions": [
          {
            "assertion": "Validations | Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Validations | Status is OK",
            "skipped": false
          },
          {
            "assertion": "Validations | isLoggedIn",
            "skipped": false
          },
          {
            "assertion": "Validations | Credentials validated",
            "skipped": false
          },
          {
            "assertion": "Validations | userID is present",
            "skipped": false
          },
          {
            "assertion": "Validations | Permissions not null",
            "skipped": false
          },
          {
            "assertion": "Validations | user authenticated",
            "skipped": false
          },
          {
            "assertion": "Validations | key is present",
            "skipped": false
          },
          {
            "assertion": "Validation| Permissions is an Array",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1af09b00-ecb9-410d-9dcf-24bb1beab4c3",
          "length": 8,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ebe9afaa-fe8a-4c93-b5bb-7bb8ce7a67c2"
        },
        "item": {
          "id": "00534f99-9c6b-4f0c-a1ee-849d3f8e204b",
          "name": "Auth - Incorrect password",
          "request": {
            "url": {
              "path": [
                "api",
                "auth"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"gianna@hightable.test\",\n    \"password\": \"1234567\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1afb0f95-05ff-4f88-9cba-592a850f51ec",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "",
                  "pm.test(\"Validations | Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Validations | Unable to validate login credentials\", function () {",
                  "    pm.expect(jsonData.ok).to.eql(false);",
                  "    pm.expect(jsonData.ok).not.eql(null);",
                  "});",
                  "",
                  "pm.test(\"Validations | isLoggedIn not found\", function () {",
                  "    pm.expect(jsonData.data).to.not.have.property('isLoggedIn');",
                  "});",
                  "",
                  "pm.test(\"Validations | userID is not available\", function () {",
                  "    pm.expect(jsonData.data).to.not.have.property('userID');",
                  "});",
                  "",
                  "pm.test(\"Validations | Permissions are not granted\", function () {",
                  "    pm.expect(jsonData.data).to.not.have.property('Permissions');",
                  "});",
                  "",
                  "pm.test(\"Validations | Invalid credentials\", function () {",
                  "    pm.expect(jsonData.data.message).to.include('Invalid login credentials');",
                  "});",
                  ""
                ],
                "_lastExecutionId": "22bb8451-94ff-4225-9a0c-5a9d6c2a2b9d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "auth"
            ],
            "host": [
              "qa-challenge-api",
              "scratchpay",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "71180adb-e5f5-4e89-8eac-0fe8c70d506f",
              "system": true
            },
            {
              "key": "Host",
              "value": "qa-challenge-api.scratchpay.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "67",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sessionID=4ab1b89ff402b4f11d14891f926de2fc5a7e650f",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"gianna@hightable.test\",\n    \"password\": \"1234567\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "3c75966c-6221-4831-be81-f0c0bb636338",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 15 Mar 2023 11:32:21 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "96"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "access-control-allow-headers",
              "value": "Content-Type, Authorization"
            },
            {
              "key": "access-control-allow-methods",
              "value": "HEAD, GET, POST, PUT, PATCH, DELETE, OPTIONS, TRACE"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-powered-by",
              "value": "dashboard-core-redux"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "7a846f73894cdcc7-LHR"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              111,
              107,
              34,
              58,
              32,
              102,
              97,
              108,
              115,
              101,
              44,
              10,
              32,
              32,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              100,
              101,
              34,
              58,
              32,
              50,
              48,
              50,
              48,
              51,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              108,
              111,
              103,
              105,
              110,
              32,
              99,
              114,
              101,
              100,
              101,
              110,
              116,
              105,
              97,
              108,
              115,
              34,
              10,
              32,
              32,
              125,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 287,
          "responseSize": 96
        },
        "id": "00534f99-9c6b-4f0c-a1ee-849d3f8e204b",
        "assertions": [
          {
            "assertion": "Validations | Status code is 400",
            "skipped": false
          },
          {
            "assertion": "Validations | Unable to validate login credentials",
            "skipped": false
          },
          {
            "assertion": "Validations | isLoggedIn not found",
            "skipped": false
          },
          {
            "assertion": "Validations | userID is not available",
            "skipped": false
          },
          {
            "assertion": "Validations | Permissions are not granted",
            "skipped": false
          },
          {
            "assertion": "Validations | Invalid credentials",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "012f830d-4e3e-4b3b-b9a5-278d862622a6",
          "length": 8,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4419ed89-6fdb-4c26-b6e6-dd624583ad0d"
        },
        "item": {
          "id": "3d9f8e04-081e-4784-b56f-657d5c5d1566",
          "name": "Auth - Incorrect email",
          "request": {
            "url": {
              "path": [
                "api",
                "auth"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"abc@google.test\",\n    \"password\": \"thedantonio1\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e2f86711-56fa-42c2-9afb-76925cad74c5",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "",
                  "pm.test(\"Validations | Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Validations | Unable to validate login credentials\", function () {",
                  "    pm.expect(jsonData.ok).to.eql(false);",
                  "    pm.expect(jsonData.ok).not.eql(null);",
                  "});",
                  "",
                  "pm.test(\"Validations | isLoggedIn not found\", function () {",
                  "    pm.expect(jsonData.data).to.not.have.property('isLoggedIn');",
                  "});",
                  "",
                  "pm.test(\"Validations | userID is not available\", function () {",
                  "    pm.expect(jsonData.data).to.not.have.property('userID');",
                  "});",
                  "",
                  "pm.test(\"Validations | Permissions are not granted\", function () {",
                  "    pm.expect(jsonData.data).to.not.have.property('Permissions');",
                  "});",
                  "",
                  "pm.test(\"Validations | Invalid credentials\", function () {",
                  "    pm.expect(jsonData.data.message).to.include('Invalid login credentials');",
                  "});"
                ],
                "_lastExecutionId": "b7d3a38c-150e-4c02-9f5f-00ee9656766f"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "auth"
            ],
            "host": [
              "qa-challenge-api",
              "scratchpay",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b0a587ed-b8e3-40b2-a218-16cc7c5911da",
              "system": true
            },
            {
              "key": "Host",
              "value": "qa-challenge-api.scratchpay.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "66",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sessionID=4ab1b89ff402b4f11d14891f926de2fc5a7e650f",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"abc@google.test\",\n    \"password\": \"thedantonio1\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "0414f2ad-cf49-4ef5-ad3d-317205a3f10f",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 15 Mar 2023 11:32:22 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "96"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "access-control-allow-headers",
              "value": "Content-Type, Authorization"
            },
            {
              "key": "access-control-allow-methods",
              "value": "HEAD, GET, POST, PUT, PATCH, DELETE, OPTIONS, TRACE"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-powered-by",
              "value": "dashboard-core-redux"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "7a846f760d3bdcc7-LHR"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              111,
              107,
              34,
              58,
              32,
              102,
              97,
              108,
              115,
              101,
              44,
              10,
              32,
              32,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              100,
              101,
              34,
              58,
              32,
              50,
              48,
              50,
              48,
              51,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              108,
              111,
              103,
              105,
              110,
              32,
              99,
              114,
              101,
              100,
              101,
              110,
              116,
              105,
              97,
              108,
              115,
              34,
              10,
              32,
              32,
              125,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 307,
          "responseSize": 96
        },
        "id": "3d9f8e04-081e-4784-b56f-657d5c5d1566",
        "assertions": [
          {
            "assertion": "Validations | Status code is 400",
            "skipped": false
          },
          {
            "assertion": "Validations | Unable to validate login credentials",
            "skipped": false
          },
          {
            "assertion": "Validations | isLoggedIn not found",
            "skipped": false
          },
          {
            "assertion": "Validations | userID is not available",
            "skipped": false
          },
          {
            "assertion": "Validations | Permissions are not granted",
            "skipped": false
          },
          {
            "assertion": "Validations | Invalid credentials",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4bfab903-595e-4ed9-a398-3af17ad92384",
          "length": 8,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bde205fd-a672-48cf-9757-b666b1eb9db7"
        },
        "item": {
          "id": "e88523c5-1bca-403e-949e-c5cd47cba8ea",
          "name": "Search Clinics - Veterinary",
          "request": {
            "url": {
              "path": [
                "api",
                "clinics"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "term",
                  "value": "{{searchTerm}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{access_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "960864f3-f4be-421e-a157-90ef1a51ae4e",
              "name": "Get Clinics",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "api",
                    "clinics"
                  ],
                  "host": [
                    "qa-challenge-api",
                    "scratchpay",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "term",
                      "value": "veterinary"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Date",
                  "value": "Tue, 14 Mar 2023 14:26:59 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "key": "strict-transport-security",
                  "value": "max-age=15724800; includeSubDomains"
                },
                {
                  "key": "access-control-allow-headers",
                  "value": "Content-Type, Authorization"
                },
                {
                  "key": "access-control-allow-methods",
                  "value": "HEAD, GET, POST, PUT, PATCH, DELETE, OPTIONS, TRACE"
                },
                {
                  "key": "access-control-allow-origin",
                  "value": "*"
                },
                {
                  "key": "x-powered-by",
                  "value": "dashboard-core-redux"
                },
                {
                  "key": "CF-Cache-Status",
                  "value": "DYNAMIC"
                },
                {
                  "key": "Server",
                  "value": "cloudflare"
                },
                {
                  "key": "CF-RAY",
                  "value": "7a7d31deea7871b1-LHR"
                },
                {
                  "key": "Content-Encoding",
                  "value": "gzip"
                }
              ],
              "body": "{\n    \"ok\": true,\n    \"data\": [\n        {\n            \"id\": 2,\n            \"displayName\": \"Continental Veterinary Clinic, Los Angeles, CA\"\n        },\n        {\n            \"id\": 7,\n            \"displayName\": \"Third Transfer Veterinary Clinic, Los Angeles, CA\"\n        }\n    ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1a116c5d-6d31-4bd2-a8dc-01ea5d38c292",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Validations | Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Validations | Credentials validated\", function () {",
                  "    pm.expect(jsonData.ok).to.eql(true);",
                  "    pm.expect(jsonData.ok).not.eql(null);",
                  "});",
                  "",
                  "pm.test(\"Validations | id is present\", function () {",
                  "    let Data = pm.response.json().data",
                  "    if(data.length>0){",
                  "    _.each(Data, (arrItem) => {",
                  "        pm.expect(arrItem.id).not.null",
                  "        pm.expect(arrItem.id).not.be.string",
                  "    })",
                  "    }",
                  "})",
                  "",
                  "pm.test(\"Validations | displayName is present\", function () {",
                  "    let Data = pm.response.json().data",
                  "    if(data.length>0){",
                  "    _.each(Data, (arrItem) => {",
                  "        pm.expect(arrItem.displayName).not.null",
                  "        pm.expect(arrItem.displayName).to.be.string",
                  "    })",
                  "    }",
                  "})",
                  "",
                  "pm.test(\"Validations | Body Contains Search Term\", function () {",
                  "",
                  "    response = jsonData.data",
                  "    if (response.length > 0) {",
                  "        response.forEach((x) => {",
                  "            pm.expect(x.displayName).to.include(pm.environment.get(\"searchTerm\"));",
                  "        })",
                  "    }",
                  "});",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "b67ac1da-459c-43cb-ba67-4eacc6f6ea2e"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "99c36d1c-a39d-48ad-a7d8-be6d0ea0a7bd",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"searchTerm\", \"Veterinary\");"
                ],
                "_lastExecutionId": "07dffbf5-5b5e-44e9-a933-324902e9d958"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "clinics"
            ],
            "host": [
              "qa-challenge-api",
              "scratchpay",
              "com"
            ],
            "query": [
              {
                "key": "term",
                "value": "Veterinary"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiZW1haWwiOiJnaWFubmFAaGlnaHRhYmxlLnRlc3QiLCJmaXJzdE5hbWUiOiJHaWFubmEiLCJsYXN0TmFtZSI6IkQnQW50b25pbyIsInN0YXR1cyI6ImFjdGl2ZSIsInJvbGUiOiJjbGluaWMiLCJpYXQiOjE2Nzg4Nzk5NDEsImV4cCI6MTY3OTQ4NDc0MX0.qMhlrvOn_Tdz6hcJFJKGwbS94PUuLPHwpAWSh6TNFd0",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6a58a18a-a411-4ab4-9313-a4a70b1e8dc9",
              "system": true
            },
            {
              "key": "Host",
              "value": "qa-challenge-api.scratchpay.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sessionID=4ab1b89ff402b4f11d14891f926de2fc5a7e650f",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiZW1haWwiOiJnaWFubmFAaGlnaHRhYmxlLnRlc3QiLCJmaXJzdE5hbWUiOiJHaWFubmEiLCJsYXN0TmFtZSI6IkQnQW50b25pbyIsInN0YXR1cyI6ImFjdGl2ZSIsInJvbGUiOiJjbGluaWMiLCJpYXQiOjE2Nzg4Nzk5NDEsImV4cCI6MTY3OTQ4NDc0MX0.qMhlrvOn_Tdz6hcJFJKGwbS94PUuLPHwpAWSh6TNFd0",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "4b5f7e51-d092-4a2d-a11a-334230514aaa",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 15 Mar 2023 11:32:22 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "access-control-allow-headers",
              "value": "Content-Type, Authorization"
            },
            {
              "key": "access-control-allow-methods",
              "value": "HEAD, GET, POST, PUT, PATCH, DELETE, OPTIONS, TRACE"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-powered-by",
              "value": "dashboard-core-redux"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "7a846f7878c5dcc7-LHR"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              111,
              107,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              32,
              32,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              34,
              58,
              32,
              50,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              105,
              115,
              112,
              108,
              97,
              121,
              78,
              97,
              109,
              101,
              34,
              58,
              32,
              34,
              67,
              111,
              110,
              116,
              105,
              110,
              101,
              110,
              116,
              97,
              108,
              32,
              86,
              101,
              116,
              101,
              114,
              105,
              110,
              97,
              114,
              121,
              32,
              67,
              108,
              105,
              110,
              105,
              99,
              44,
              32,
              76,
              111,
              115,
              32,
              65,
              110,
              103,
              101,
              108,
              101,
              115,
              44,
              32,
              67,
              65,
              34,
              10,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              34,
              58,
              32,
              55,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              105,
              115,
              112,
              108,
              97,
              121,
              78,
              97,
              109,
              101,
              34,
              58,
              32,
              34,
              84,
              104,
              105,
              114,
              100,
              32,
              84,
              114,
              97,
              110,
              115,
              102,
              101,
              114,
              32,
              86,
              101,
              116,
              101,
              114,
              105,
              110,
              97,
              114,
              121,
              32,
              67,
              108,
              105,
              110,
              105,
              99,
              44,
              32,
              76,
              111,
              115,
              32,
              65,
              110,
              103,
              101,
              108,
              101,
              115,
              44,
              32,
              67,
              65,
              34,
              10,
              32,
              32,
              32,
              32,
              125,
              10,
              32,
              32,
              93,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 381,
          "responseSize": 231
        },
        "id": "e88523c5-1bca-403e-949e-c5cd47cba8ea",
        "assertions": [
          {
            "assertion": "Validations | Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Validations | Credentials validated",
            "skipped": false
          },
          {
            "assertion": "Validations | id is present",
            "skipped": false
          },
          {
            "assertion": "Validations | displayName is present",
            "skipped": false
          },
          {
            "assertion": "Validations | Body Contains Search Term",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "93376c1d-a9da-4d2a-899b-d6f5a50c0ac8",
          "length": 8,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d97fa901-1f37-4900-9a9a-ab3a9d3551cc"
        },
        "item": {
          "id": "fb68f8fc-b7ed-48ef-90e4-569057e48b6d",
          "name": "Search Clinics - Veterinary without auth",
          "request": {
            "url": {
              "path": [
                "api",
                "clinics"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "term",
                  "value": "{{searchTerm}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "43d47bac-0acb-4b77-bc0b-828c3c91528e",
              "name": "Get Clinics",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "api",
                    "clinics"
                  ],
                  "host": [
                    "qa-challenge-api",
                    "scratchpay",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "term",
                      "value": "veterinary"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Date",
                  "value": "Tue, 14 Mar 2023 14:26:59 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "key": "strict-transport-security",
                  "value": "max-age=15724800; includeSubDomains"
                },
                {
                  "key": "access-control-allow-headers",
                  "value": "Content-Type, Authorization"
                },
                {
                  "key": "access-control-allow-methods",
                  "value": "HEAD, GET, POST, PUT, PATCH, DELETE, OPTIONS, TRACE"
                },
                {
                  "key": "access-control-allow-origin",
                  "value": "*"
                },
                {
                  "key": "x-powered-by",
                  "value": "dashboard-core-redux"
                },
                {
                  "key": "CF-Cache-Status",
                  "value": "DYNAMIC"
                },
                {
                  "key": "Server",
                  "value": "cloudflare"
                },
                {
                  "key": "CF-RAY",
                  "value": "7a7d31deea7871b1-LHR"
                },
                {
                  "key": "Content-Encoding",
                  "value": "gzip"
                }
              ],
              "body": "{\n    \"ok\": true,\n    \"data\": [\n        {\n            \"id\": 2,\n            \"displayName\": \"Continental Veterinary Clinic, Los Angeles, CA\"\n        },\n        {\n            \"id\": 7,\n            \"displayName\": \"Third Transfer Veterinary Clinic, Los Angeles, CA\"\n        }\n    ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "28ef571d-1b29-4f65-a693-c1db6dbe375c",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Validations | Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test(\"Status is Unauthorized\", function () {",
                  "    pm.response.to.have.status(\"Unauthorized\");",
                  "});",
                  "",
                  "pm.test(\"Validations | user is Unauthorized\", function () {",
                  "    pm.expect(jsonData.ok).to.eql(false);",
                  "    pm.expect(jsonData.ok).not.eql(null);",
                  "});",
                  "",
                  "pm.test(\"Validations | Body does not contain Search Term\", function () {",
                  "",
                  "    response = jsonData.data",
                  "    if (response.length > 0) {",
                  "        response.forEach((x) => {",
                  "            pm.expect(x.displayName).to.not.include(pm.environment.get(\"searchTerm\"));",
                  "        })",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Validations | Unauthorized user\", function () {",
                  "    pm.expect(jsonData.data.message).to.include('You need to be authorized for this action.');",
                  "});",
                  ""
                ],
                "_lastExecutionId": "898bf408-927e-4eac-81f8-d6c0a3f09cb0"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "d9d80780-0e8d-45c9-b758-c78c8aabcb1a",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"searchTerm\", \"Veterinary\");"
                ],
                "_lastExecutionId": "9cc466e3-cf04-4a0b-82ad-c8409eefb207"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "clinics"
            ],
            "host": [
              "qa-challenge-api",
              "scratchpay",
              "com"
            ],
            "query": [
              {
                "key": "term",
                "value": "Veterinary"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ff921ead-bccb-458f-b8fb-d6b5fb3a0a6a",
              "system": true
            },
            {
              "key": "Host",
              "value": "qa-challenge-api.scratchpay.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sessionID=4ab1b89ff402b4f11d14891f926de2fc5a7e650f",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "10dc3aa8-b5fb-42ea-9a75-302b26f9a615",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 15 Mar 2023 11:32:23 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "94"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "access-control-allow-headers",
              "value": "Content-Type, Authorization"
            },
            {
              "key": "access-control-allow-methods",
              "value": "HEAD, GET, POST, PUT, PATCH, DELETE, OPTIONS, TRACE"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-powered-by",
              "value": "dashboard-core-redux"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "7a846f7bcdb2dcc7-LHR"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              111,
              107,
              34,
              58,
              32,
              102,
              97,
              108,
              115,
              101,
              44,
              10,
              32,
              32,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              89,
              111,
              117,
              32,
              110,
              101,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              102,
              111,
              114,
              32,
              116,
              104,
              105,
              115,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              46,
              34,
              10,
              32,
              32,
              125,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 387,
          "responseSize": 94
        },
        "id": "fb68f8fc-b7ed-48ef-90e4-569057e48b6d",
        "assertions": [
          {
            "assertion": "Validations | Status code is 401",
            "skipped": false
          },
          {
            "assertion": "Status is Unauthorized",
            "skipped": false
          },
          {
            "assertion": "Validations | user is Unauthorized",
            "skipped": false
          },
          {
            "assertion": "Validations | Body does not contain Search Term",
            "skipped": false
          },
          {
            "assertion": "Validations | Unauthorized user",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "7358a7f0-4200-476d-a857-945292dccb2d",
          "length": 8,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "30fc5f9d-195e-412b-b1c8-142bbf0e107c"
        },
        "item": {
          "id": "5f0235f9-3729-4a53-8181-ced3c3c6c0a1",
          "name": "Search Clinics - Dental",
          "request": {
            "url": {
              "path": [
                "api",
                "clinics"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "term",
                  "value": "{{searchTerm}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{access_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "827c630f-1baf-45a7-81ab-e86a6c09c44f",
              "name": "Get Clinics",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "api",
                    "clinics"
                  ],
                  "host": [
                    "qa-challenge-api",
                    "scratchpay",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "term",
                      "value": "veterinary"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Date",
                  "value": "Tue, 14 Mar 2023 14:26:59 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "key": "strict-transport-security",
                  "value": "max-age=15724800; includeSubDomains"
                },
                {
                  "key": "access-control-allow-headers",
                  "value": "Content-Type, Authorization"
                },
                {
                  "key": "access-control-allow-methods",
                  "value": "HEAD, GET, POST, PUT, PATCH, DELETE, OPTIONS, TRACE"
                },
                {
                  "key": "access-control-allow-origin",
                  "value": "*"
                },
                {
                  "key": "x-powered-by",
                  "value": "dashboard-core-redux"
                },
                {
                  "key": "CF-Cache-Status",
                  "value": "DYNAMIC"
                },
                {
                  "key": "Server",
                  "value": "cloudflare"
                },
                {
                  "key": "CF-RAY",
                  "value": "7a7d31deea7871b1-LHR"
                },
                {
                  "key": "Content-Encoding",
                  "value": "gzip"
                }
              ],
              "body": "{\n    \"ok\": true,\n    \"data\": [\n        {\n            \"id\": 2,\n            \"displayName\": \"Continental Veterinary Clinic, Los Angeles, CA\"\n        },\n        {\n            \"id\": 7,\n            \"displayName\": \"Third Transfer Veterinary Clinic, Los Angeles, CA\"\n        }\n    ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b369fe4a-a160-40d2-af05-65930886f082",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Validations | Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Validations | Body Contains Search Term\", function () {",
                  "",
                  "    response = jsonData.data",
                  "    if (response.length > 0) {",
                  "        response.forEach((x) => {",
                  "            pm.expect(x.displayName).to.include(pm.environment.get(\"searchTerm\"));",
                  "        })",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Validations | Credentials validated\", function () {",
                  "    pm.expect(jsonData.ok).to.eql(true);",
                  "    pm.expect(jsonData.ok).not.eql(null);",
                  "});",
                  "",
                  "pm.test(\"Validations | id is present\", function () {",
                  "    let Data = pm.response.json().data",
                  "    if(data.length>0){",
                  "    _.each(Data, (arrItem) => {",
                  "        pm.expect(arrItem.id).not.null",
                  "        pm.expect(arrItem.id).not.be.string",
                  "    })",
                  "    }",
                  "})",
                  "",
                  "pm.test(\"Validations | displayName is present\", function () {",
                  "    let Data = pm.response.json().data",
                  "    if(data.length>0){",
                  "    _.each(Data, (arrItem) => {",
                  "        pm.expect(arrItem.displayName).not.null",
                  "        pm.expect(arrItem.displayName).to.be.string",
                  "    })",
                  "    }",
                  "})",
                  ""
                ],
                "_lastExecutionId": "e9fc4cbd-1389-4e2a-9231-d0da84983f7f"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "cb6bea47-4a7d-475f-be91-fb13edc9df96",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"searchTerm\", \"Dental\");"
                ],
                "_lastExecutionId": "24ee98df-3a58-46b2-a313-e500a0e271bd"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "clinics"
            ],
            "host": [
              "qa-challenge-api",
              "scratchpay",
              "com"
            ],
            "query": [
              {
                "key": "term",
                "value": "Dental"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiZW1haWwiOiJnaWFubmFAaGlnaHRhYmxlLnRlc3QiLCJmaXJzdE5hbWUiOiJHaWFubmEiLCJsYXN0TmFtZSI6IkQnQW50b25pbyIsInN0YXR1cyI6ImFjdGl2ZSIsInJvbGUiOiJjbGluaWMiLCJpYXQiOjE2Nzg4Nzk5NDEsImV4cCI6MTY3OTQ4NDc0MX0.qMhlrvOn_Tdz6hcJFJKGwbS94PUuLPHwpAWSh6TNFd0",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b3b5acaf-33a1-4619-858d-b04d90cc034f",
              "system": true
            },
            {
              "key": "Host",
              "value": "qa-challenge-api.scratchpay.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sessionID=4ab1b89ff402b4f11d14891f926de2fc5a7e650f",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiZW1haWwiOiJnaWFubmFAaGlnaHRhYmxlLnRlc3QiLCJmaXJzdE5hbWUiOiJHaWFubmEiLCJsYXN0TmFtZSI6IkQnQW50b25pbyIsInN0YXR1cyI6ImFjdGl2ZSIsInJvbGUiOiJjbGluaWMiLCJpYXQiOjE2Nzg4Nzk5NDEsImV4cCI6MTY3OTQ4NDc0MX0.qMhlrvOn_Tdz6hcJFJKGwbS94PUuLPHwpAWSh6TNFd0",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "26bb27be-0c99-4b28-a9b5-6e5edcbc7d62",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 15 Mar 2023 11:32:23 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "access-control-allow-headers",
              "value": "Content-Type, Authorization"
            },
            {
              "key": "access-control-allow-methods",
              "value": "HEAD, GET, POST, PUT, PATCH, DELETE, OPTIONS, TRACE"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-powered-by",
              "value": "dashboard-core-redux"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "7a846f7eaa21dcc7-LHR"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              111,
              107,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              32,
              32,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              34,
              58,
              32,
              56,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              105,
              115,
              112,
              108,
              97,
              121,
              78,
              97,
              109,
              101,
              34,
              58,
              32,
              34,
              68,
              101,
              110,
              116,
              97,
              108,
              32,
              67,
              97,
              114,
              101,
              44,
              32,
              80,
              97,
              115,
              97,
              100,
              101,
              110,
              97,
              44,
              32,
              67,
              65,
              34,
              10,
              32,
              32,
              32,
              32,
              125,
              10,
              32,
              32,
              93,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 289,
          "responseSize": 109
        },
        "id": "5f0235f9-3729-4a53-8181-ced3c3c6c0a1",
        "assertions": [
          {
            "assertion": "Validations | Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Validations | Body Contains Search Term",
            "skipped": false
          },
          {
            "assertion": "Validations | Credentials validated",
            "skipped": false
          },
          {
            "assertion": "Validations | id is present",
            "skipped": false
          },
          {
            "assertion": "Validations | displayName is present",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e8b02d74-2173-4bdf-bd64-3903277a4305",
          "length": 8,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c6872206-196b-434b-8b3d-d81a7273944e"
        },
        "item": {
          "id": "3f760bcb-ea5f-4455-8039-c6635cec2eb5",
          "name": "Search Clinics - Eye",
          "request": {
            "url": {
              "path": [
                "api",
                "clinics"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "term",
                  "value": "Eye"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{access_token}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1e2d80e9-1e2a-4e22-a0aa-011db9aaea75",
              "name": "Get Clinics",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "api",
                    "clinics"
                  ],
                  "host": [
                    "qa-challenge-api",
                    "scratchpay",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "term",
                      "value": "veterinary"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Date",
                  "value": "Tue, 14 Mar 2023 14:26:59 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "key": "strict-transport-security",
                  "value": "max-age=15724800; includeSubDomains"
                },
                {
                  "key": "access-control-allow-headers",
                  "value": "Content-Type, Authorization"
                },
                {
                  "key": "access-control-allow-methods",
                  "value": "HEAD, GET, POST, PUT, PATCH, DELETE, OPTIONS, TRACE"
                },
                {
                  "key": "access-control-allow-origin",
                  "value": "*"
                },
                {
                  "key": "x-powered-by",
                  "value": "dashboard-core-redux"
                },
                {
                  "key": "CF-Cache-Status",
                  "value": "DYNAMIC"
                },
                {
                  "key": "Server",
                  "value": "cloudflare"
                },
                {
                  "key": "CF-RAY",
                  "value": "7a7d31deea7871b1-LHR"
                },
                {
                  "key": "Content-Encoding",
                  "value": "gzip"
                }
              ],
              "body": "{\n    \"ok\": true,\n    \"data\": [\n        {\n            \"id\": 2,\n            \"displayName\": \"Continental Veterinary Clinic, Los Angeles, CA\"\n        },\n        {\n            \"id\": 7,\n            \"displayName\": \"Third Transfer Veterinary Clinic, Los Angeles, CA\"\n        }\n    ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c3ec2de2-508d-4048-a201-5cc005982090",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Validations | Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Validations | Body Contains Search Term\", function () {",
                  "",
                  "    response = jsonData.data",
                  "    if (response.length > 0) {",
                  "        response.forEach((x) => {",
                  "            pm.expect(x.displayName).to.include(pm.environment.get(\"searchTerm\"));",
                  "        })",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Validations | Credentials validated\", function () {",
                  "    pm.expect(jsonData.ok).to.eql(true);",
                  "    pm.expect(jsonData.ok).not.eql(null);",
                  "});",
                  "",
                  "pm.test(\"Validations | id is present\", function () {",
                  "    let Data = pm.response.json().data",
                  "    if(data.length>0){",
                  "    _.each(Data, (arrItem) => {",
                  "        pm.expect(arrItem.id).not.null",
                  "        pm.expect(arrItem.id).not.be.string",
                  "    })",
                  "    }",
                  "})",
                  "",
                  "pm.test(\"Validations | displayName is present\", function () {",
                  "    let Data = pm.response.json().data",
                  "    if(data.length>0){",
                  "    _.each(Data, (arrItem) => {",
                  "        pm.expect(arrItem.displayName).not.null",
                  "        pm.expect(arrItem.displayName).to.be.string",
                  "    })",
                  "    }",
                  "})",
                  "",
                  ""
                ],
                "_lastExecutionId": "55e72c02-7360-40a6-8dbc-37559e879600"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "3cb4c4a5-df1b-478b-8163-f886e05f9399",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"searchTerm\", \"Eye\");"
                ],
                "_lastExecutionId": "52cbd728-5473-4d25-aedd-429146597051"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "clinics"
            ],
            "host": [
              "qa-challenge-api",
              "scratchpay",
              "com"
            ],
            "query": [
              {
                "key": "term",
                "value": "Eye"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiZW1haWwiOiJnaWFubmFAaGlnaHRhYmxlLnRlc3QiLCJmaXJzdE5hbWUiOiJHaWFubmEiLCJsYXN0TmFtZSI6IkQnQW50b25pbyIsInN0YXR1cyI6ImFjdGl2ZSIsInJvbGUiOiJjbGluaWMiLCJpYXQiOjE2Nzg4Nzk5NDEsImV4cCI6MTY3OTQ4NDc0MX0.qMhlrvOn_Tdz6hcJFJKGwbS94PUuLPHwpAWSh6TNFd0",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7ff2b768-5a35-4fe4-b052-af84a339e78e",
              "system": true
            },
            {
              "key": "Host",
              "value": "qa-challenge-api.scratchpay.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sessionID=4ab1b89ff402b4f11d14891f926de2fc5a7e650f",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiZW1haWwiOiJnaWFubmFAaGlnaHRhYmxlLnRlc3QiLCJmaXJzdE5hbWUiOiJHaWFubmEiLCJsYXN0TmFtZSI6IkQnQW50b25pbyIsInN0YXR1cyI6ImFjdGl2ZSIsInJvbGUiOiJjbGluaWMiLCJpYXQiOjE2Nzg4Nzk5NDEsImV4cCI6MTY3OTQ4NDc0MX0.qMhlrvOn_Tdz6hcJFJKGwbS94PUuLPHwpAWSh6TNFd0",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "0e8c16d5-4e54-4671-b2e5-0c3907de8286",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 15 Mar 2023 11:32:23 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "30"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "access-control-allow-headers",
              "value": "Content-Type, Authorization"
            },
            {
              "key": "access-control-allow-methods",
              "value": "HEAD, GET, POST, PUT, PATCH, DELETE, OPTIONS, TRACE"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-powered-by",
              "value": "dashboard-core-redux"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "7a846f80fd98dcc7-LHR"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              111,
              107,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              32,
              32,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              32,
              91,
              93,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 310,
          "responseSize": 30
        },
        "id": "3f760bcb-ea5f-4455-8039-c6635cec2eb5",
        "assertions": [
          {
            "assertion": "Validations | Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Validations | Body Contains Search Term",
            "skipped": false
          },
          {
            "assertion": "Validations | Credentials validated",
            "skipped": false
          },
          {
            "assertion": "Validations | id is present",
            "skipped": false
          },
          {
            "assertion": "Validations | displayName is present",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0ee99cb2-4ea7-4097-a0a7-930679cb3a9f",
          "length": 8,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a469b77b-f1d7-48d9-a914-26814fbf485a"
        },
        "item": {
          "id": "e8924d21-7c65-4d30-af1b-96504ee8b351",
          "name": "Get Emails",
          "request": {
            "url": {
              "path": [
                "api",
                "clinics",
                "2",
                "emails"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiZW1haWwiOiJnaWFubmFAaGlnaHRhYmxlLnRlc3QiLCJmaXJzdE5hbWUiOiJHaWFubmEiLCJsYXN0TmFtZSI6IkQnQW50b25pbyIsInN0YXR1cyI6ImFjdGl2ZSIsInJvbGUiOiJjbGluaWMiLCJpYXQiOjE2Nzg4MDM4MjAsImV4cCI6MTY3OTQwODYyMH0.hfjvQ5TBLbyVbvmELxP37allLOfdiuexj8Uwat_GLG0",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2c17c5ea-2358-4e66-a02c-c0ce063b716d",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Validations | Status code is 400\", function () {\r",
                  "    pm.response.to.have.status(400);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Validations | Status = Bad Request\", function () {\r",
                  "    pm.response.to.have.status(\"Bad Request\");\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Validations | credentials not valid for this action\", function () {\r",
                  "    pm.expect(jsonData.ok).to.eql(false);\r",
                  "    pm.expect(jsonData.ok).not.eql(null);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Validations | User not permitted\", function () {\r",
                  "    pm.expect(pm.response.text()).to.include(\"User does not have permissions\");\r",
                  "});"
                ],
                "_lastExecutionId": "65ec38ef-1ab8-411c-93ff-d54fb57a5dd6"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "clinics",
              "2",
              "emails"
            ],
            "host": [
              "qa-challenge-api",
              "scratchpay",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiZW1haWwiOiJnaWFubmFAaGlnaHRhYmxlLnRlc3QiLCJmaXJzdE5hbWUiOiJHaWFubmEiLCJsYXN0TmFtZSI6IkQnQW50b25pbyIsInN0YXR1cyI6ImFjdGl2ZSIsInJvbGUiOiJjbGluaWMiLCJpYXQiOjE2Nzg4MDM4MjAsImV4cCI6MTY3OTQwODYyMH0.hfjvQ5TBLbyVbvmELxP37allLOfdiuexj8Uwat_GLG0",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2a9bb067-dad4-4604-a54c-b0e6cf5a2a07",
              "system": true
            },
            {
              "key": "Host",
              "value": "qa-challenge-api.scratchpay.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sessionID=4ab1b89ff402b4f11d14891f926de2fc5a7e650f",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiZW1haWwiOiJnaWFubmFAaGlnaHRhYmxlLnRlc3QiLCJmaXJzdE5hbWUiOiJHaWFubmEiLCJsYXN0TmFtZSI6IkQnQW50b25pbyIsInN0YXR1cyI6ImFjdGl2ZSIsInJvbGUiOiJjbGluaWMiLCJpYXQiOjE2Nzg4MDM4MjAsImV4cCI6MTY3OTQwODYyMH0.hfjvQ5TBLbyVbvmELxP37allLOfdiuexj8Uwat_GLG0",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "89f76f62-cbbc-4f65-bbbb-2c6edc530dbd",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 15 Mar 2023 11:32:24 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "123"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "access-control-allow-headers",
              "value": "Content-Type, Authorization"
            },
            {
              "key": "access-control-allow-methods",
              "value": "HEAD, GET, POST, PUT, PATCH, DELETE, OPTIONS, TRACE"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "x-powered-by",
              "value": "dashboard-core-redux"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "7a846f83895fdcc7-LHR"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              111,
              107,
              34,
              58,
              32,
              102,
              97,
              108,
              115,
              101,
              44,
              10,
              32,
              32,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              65,
              110,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              104,
              97,
              112,
              112,
              101,
              110,
              101,
              100,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              32,
              34,
              69,
              114,
              114,
              111,
              114,
              58,
              32,
              85,
              115,
              101,
              114,
              32,
              100,
              111,
              101,
              115,
              32,
              110,
              111,
              116,
              32,
              104,
              97,
              118,
              101,
              32,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              34,
              10,
              32,
              32,
              125,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 417,
          "responseSize": 123
        },
        "id": "e8924d21-7c65-4d30-af1b-96504ee8b351",
        "assertions": [
          {
            "assertion": "Validations | Status code is 400",
            "skipped": false
          },
          {
            "assertion": "Validations | Status = Bad Request",
            "skipped": false
          },
          {
            "assertion": "Validations | credentials not valid for this action",
            "skipped": false
          },
          {
            "assertion": "Validations | User not permitted",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 2366
    },
    "failures": [],
    "error": null
  }
}